package dzhyun;

option java_package = "com.dzhyun.proto";


message KXian	//K线
{
	required int64 ShiJian = 1; 				//时间
    optional int64 KaiPanJia = 2; 				//开盘价
    optional int64 ZuiGaoJia = 3; 				//最高价
    optional int64 ZuiDiJia = 4; 				//最低价
    optional int64 ShouPanJia = 5; 				//收盘价
    optional int64 ChengJiaoLiang = 6; 			//成交量
    optional int64 ChengJiaoE = 7; 				//成交额
    optional int64 ChengJiaoBiShu = 8;			//成交笔数(非指数时有效)
    optional int64 ShangZhangJiaShu = 9; 		//上涨家数(仅指数时有效)
    optional int64 XiaDieJiaShu = 10; 			//下跌家数(仅指数时有效)
    optional int64 ChiCang = 11;                //持仓(仅期货时有效)
    optional int64 ZengCang = 12;               //增仓(仅期货时有效)
    optional int64 ZengLiang = 13;              //增量(仅期货时有效)
    optional int64 JieSuanJia = 14;             //结算价(仅期货时有效)
	optional int64 Id = 15; 					//序号(仅数字货币有效)
	optional int64 LiuRuE = 16;					//流入额(仅数字货币有效)
	optional int64 LiuChuE = 17;      			//流出额(仅数字货币有效)
    optional int64 PanHouChengJiaoLiang = 18; 	//盘后成交量(科创板股票有效)
    optional int64 PanHouChengJiaoE = 19; 		//盘后成交额(科创板股票有效)
    optional int64 PanHouChengJiaoBiShu = 20;	//盘后成交笔数(科创板股票有效)
	
}

message KXianList
{
	repeated KXian Data = 1;
}

message FenShi //分时
{
	required int64 ShiJian = 1; 				//时间
    optional int64 ChengJiaoJia = 2; 			//成交价
    optional int64 ChengJiaoLiang = 3; 			//成交量
    optional int64 ChengJiaoE = 4; 				//成交额
    optional int64 JunJia = 5; 					//均价
    optional int64 LingXianZhiBiao = 6;         //领先指标
    optional int64 DuoKongXian = 7;             //多空线
    optional int64 WeiTuoMaiRuZongLiang = 8;    //allbuyvol f   委买总量
    optional int64 WeiTuoMaiChuZongLiang = 9;   //allselvol f   委卖总量
	optional int64 Id = 10; 					//序号
}

message FenShiLishi //分时
{
    repeated FenShi Rows = 1;
    optional int64  RiQi = 2;
	optional int64  ZuoShou = 3; 
	repeated JiaoYiShiJianDuanJieGou JiaoYiShiJianDuan = 4;	
	optional int64  ZuoJieSuan = 5;			
}

message DynaAlib //分时
{
    required int64 ShiJian = 1;                 //时间
    required int64 ID = 2;                 //id
    repeated string Objs = 3;            //objs
    repeated DynaAlibObj DAObjs = 4;            //obj
}

message DynaAlibObj //分时
{
    repeated string Objs = 1;            //obj
}

message BackUpState   //K线备份
{
    required string Market = 1;                 //市场
    optional int64 BackUpTime = 2;               //备份日期
    optional int64 BackUpCloseStatus = 3;      //备份状态
    optional int64 CloseTime = 4;                //收盘日期
    optional int64 CloseStatus = 5;              //收盘状态
}

message LingxianDuokongZhibiao //领先多空指标
{
    required int64 ShiJian = 1;                 //时间
    optional int64 LingXianZhiBiao = 2;              //领先指标
    optional int64 DuoKongXian = 3;                  //多空线
}

message LingxianDuokongZhibiaoStatus //领先多空指标
{
    required int64 JiaoYiRiQi = 1;  //记录领先多空指标分时状态时间
    optional int64 IndexStatuc = 2; //记录领先多空指标分时状态下标
    optional LingxianDuokongZhibiao DataStatus = 3; //记录领先多空指标分时状态数据
}

message JiaoYiShiJianDuanJieGou 
{
    optional int64 KaiShiShiJian = 1;
    optional int64 JieShuShiJian = 2;
    optional int64 KaiShiRiQi = 3;
    optional int64 JieShuRiQi = 4;
}
